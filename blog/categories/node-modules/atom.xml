<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: node_modules | 鄭傑森的 "扣"]]></title>
  <link href="http://jasoncheng.github.com/blog/categories/node-modules/atom.xml" rel="self"/>
  <link href="http://jasoncheng.github.com/"/>
  <updated>2013-11-25T19:28:12+08:00</updated>
  <id>http://jasoncheng.github.com/</id>
  <author>
    <name><![CDATA[JasonCheng 17hado.com(@)gmail.com]]></name>
    <email><![CDATA[info@jasoncheng.tw]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Node.js ready for production, some tips.]]></title>
    <link href="http://jasoncheng.github.com/blog/2013/11/15/node-dot-js-prepare-for-production/"/>
    <updated>2013-11-15T21:25:00+08:00</updated>
    <id>http://jasoncheng.github.com/blog/2013/11/15/node-dot-js-prepare-for-production</id>
    <content type="html"><![CDATA[<p>This article is just for personal note/log, and don't know if this helpful.
Recently, we finish a small project(news web site) base on NodeJS / MongoDB(Replicaset) / MySQL.</p>

<h3>status</h3>

<p><strong>servers:</strong>  use <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 m1.medium</a> * 2 (for we don't use cluster, just 1 core CPU is enough; but why not use small instance, it's network issue); Theoretically, one server can handle all of this, but for more safety reason(LoadBalance), we take two.</p>

<p><strong>pageview:</strong> about 5 million pageview per day (i believe it's can handle more request)</p>

<p><strong>max concurrency user:</strong> 15,000</p>

<p><strong>nodejs version:</strong> 0.10.21</p>

<p><strong>jobs: </strong></p>

<pre><code>- huge amount news pages(directly query mongodb, and do layout)
- each page at least require 50 ~ 200 mongodb query(It's a long story, that i don't wanna mention about)
- each page response time approximate 50~100ms
- JSONP APIs
- proxy 80 port request to another port number(maybe mobile web/different domain) which listened by NodeJS too
- 302+301 redirect
</code></pre>

<h3>package.json</h3>

<p><code>
"dependencies": {    
  "express": "3.4.4",
  "http-proxy": "0.10.2",
  "mongodb": "1.3.19",    
  "sequelize": "1.6.0",   
  "dateformat": "~1.0.4",
  "flow": "0.2.3",   
  "memcached": "0.1.5",   
  "node-cache": "0.0.4",
  "consolidate": "0.8.0",
  "swig": "~0.13.5",
  "sprintf": "0.1.1",
  "request": "2.27.0",    
  "solr": "0.2.2",   
  "MD5": "1.0.3",    
  "xml2js": "0.2.7",
  "log-prefix": "0.0.0",  
  "sitemap": "0.6.0",
  "mysql": "2.0.0-alpha9",
  "colors": "~0.6.2"
}
</code></p>

<h3>cache as possible as you can</h3>

<p>cache everything, and let it auto expire maybe few mins; for, NodeJS is a daemon,
sometime in-memory cache is better/faster than memcached server,
and most important things is it no necessary to convert <strong>Object/Array &lt;=> string</strong> each time you get and set.</p>

<p>so, i cache Object/Array use <a href="https://github.com/ptarjan/node-cache">node-cache</a>, but be aware on call by reference.</p>

<h3>keep process run forever</h3>

<p>Before, i use <a href="https://github.com/nodejitsu/forever">forever</a> to keep process running, it's very useful module;
but currently i use init script instead. here is my example(/etc/init/web.conf):</p>

<p>```
start on (local-filesystems and net-device-up IFACE=eth0)     <br/>
stop on shutdown</p>

<p>respawn</p>

<p>script    <br/>
  sleep 5        <br/>
  export NODE_ENV=production  <br/>
  cd /var/www/web
  exec /usr/bin/node --nouse-idle-notification www.js 2>&amp;1 >> /var/log/node/www.log
end script<br/>
```</p>

<h3>prevent use JSON.parse / JSON.stringify</h3>

<p>In my experience, after your node run about few days(arround handle 20M requests),
if you use those two method on frequently request,
100% i can sure that your node process will reach 100% CPU usage and finally can't handle any request/response.</p>

<p>It's can be trace through <a href="https://github.com/bnoordhuis/node-heapdump">heapdump</a>.</p>

<p><code>
var b = JSON.stringify({c:1293, t:'ads'});
</code></p>

<p>maybe few days, will become....</p>

<p><code>
b = '\\\\\\\\\\\\\\\\\...........';  // endless slash
</code></p>

<p>weird, right? i can't explain why? but after use heapdump i found this and fixed.</p>

<p>my another EC2 server(m1.medium x 2) each handle 2.5M request per day, simple respose HTTP Header,
calculator pageview and update mongodb fields (count++);
all server after run 4 days, it's will no response, and no any error, can't handle any request. all i can do is just restart
this service.</p>

<p>after remove all JSON.parse/JSON.stringify, its alive form 4 days to 1 month before last time i restart.</p>

<h3>too many open files</h3>

<p><a href="http://stackoverflow.com/questions/5321432/simple-nodejs-http-proxy-fails-with-too-many-open-files">configure like this</a></p>

<h3>log as more details as you can</h3>

<p>my expressjs setting.</p>

<p>```
app.configure('development', function(){ <br/>
  app.use(express.logger('dev'));
});</p>

<p>app.configure('production', function(){  <br/>
  app.use(express.logger('default'));
});
```</p>

<p>and my logrotate config is.</p>

<p><code>
/var/log/node/*.log{  
  rotate 30
  daily
  missingok
  notifempty
  delaycompress  
  compress  
  copytruncate   
}
</code></p>

<h3>process.on('uncaughtException')</h3>

<p><a href="http://nodejs.org/api/process.html#process_event_uncaughtexception">according to this</a>, don't use it.</p>

<h3>think before use express.static</h3>

<p>our new web site when lunch, first issue popup is static file server (NodeJS+express.static) not powerful,
can't handle large request on photos/css/images/javascript,
even all static file send {maxAge:86000}, it's just slowly and finally no any response.</p>

<p>maybe nginx or apache is a good option for static file server.</p>

<h3>Be careful on call by reference</h3>

<p>Object or Array are call by reference, be careful.</p>

<h3>mongoDB no open connection issue</h3>

<p>We have 3 mongodb build with replicaset.
This problem make me confuse for a long time, sometimes the mongodb connection reset, sometimes it's show no open connection;
and we tracing the wrong way either.</p>

<p>But all my no open connection issue come from below (i'm 99% sure, not node mongo native module issue).
In my case, those two</p>

<pre><code>- prevent recursive call
- prevent use process.uncaugthException
</code></pre>

<p>Below example, will produce "no open connection", after few seconds:</p>

<p>```
process.on('uncaughtException', function(err) {
  console.log('Caught exception: ' + err);  // watch this full code trace, you will figure out why connection drop!
});</p>

<p>flow.exec(
  function(){</p>

<pre><code>db.find({lastName: 'jason'}).toArray(this);
</code></pre>

<p>  },
  function(err, docs){</p>

<pre><code>var data = [];
for(var idx in docs){
  docs[idx].ooo = docs[idx].notExists.ooo; // will die here, then caugth by uncaughtException
  data.push(docs[idx]);
}
this(data);
</code></pre>

<p>  },
  function(data){</p>

<pre><code>res.render('index.html', data);
</code></pre>

<p>  }
);
```</p>

<p>What if, you still have to use process.on('uncaughtException') for some reason ?</p>

<p>try process.nextTick, to escape this exception affect to mongo module, it's useful!</p>

<h3>wrote test case</h3>

<p>thinking about all situation, and wrote into test case(maybe use <a href="http://visionmedia.github.io/mocha/">mocha</a>),
for production service when occur unknow bug, this is quick solution to find the issue.</p>

<pre><code>- such as, testing all recently URL through sitemap.xml ? if HTTP Status 200 Okay
- such as, detect mognodb status, can be find data, can be use aggregate.....
- such as, is MySQL/Memcached/Solr server alive?
</code></pre>

<h3>NodeJS console</h3>

<p>use different log level (info/warn/error/log) and maybe add some <a href="https://github.com/Marak/colors.js">color</a>(red/yellow) for more easier to debug.</p>

<p>console.warn and console.error is stderr, it won't wrote message when NODE_ENV=production,
maybe you should override console object for this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[幫你的 Cacti 加個監控告警機制]]></title>
    <link href="http://jasoncheng.github.com/blog/2012/07/24/new-node-module-cacti-host-updown-monitor/"/>
    <updated>2012-07-24T22:47:00+08:00</updated>
    <id>http://jasoncheng.github.com/blog/2012/07/24/new-node-module-cacti-host-updown-monitor</id>
    <content type="html"><![CDATA[<p>玩了幾個月的 Node, 而且昨晚睡不著, 裝了 cacti 起來玩玩 (<strong><em> 是的, 我很宅 </em></strong>),
今天撞到頭的想把自己寫的爛東西  <a href="http://search.npmjs.org/#/cacti-host-updown-monitor">cacti-host-updown-monitor</a>, 分享一下!</p>

<p>畢竟用的 node_modules 好一陣子了, 從來也沒用Github 來 OpenSource (羞~~這樣也叫 OpenSource... <strong><em> 指 </em></strong>) .
趁這個機會, 順便來玩玩 npm 發佈.</p>

<p><code>sh
$ npm adduser (建立你的帳號)
$ npm publish (發佈 Node Module 到 NPM Registry)
</code></p>

<p>或許你會說, <a href="http://www.cacti.net/">cacti</a> 不是已經有很多 plugin 了; 比如說, <code>thold</code> 之類的 Thresholds / Alarms 機制了,
是的, 沒錯; <strong><em> But i don't care </em></strong>, 這部分我不想裝 plugin, 我只想用自己寫的...哈!</p>

<p>題外話: 現在回想起來, 比起 cacti 以前在 TTN 弄的那套 Device Monitor 還真好用(誤)....但這都是過去了...過去了...</p>

<h3>適用對象</h3>

<pre><code>- 白老鼠
- 不怕死的勇者
- 有使用 cacti 做 device monitor 的人.
</code></pre>

<h3>適用的cacti版本</h3>

<pre><code>- ALL
</code></pre>

<h3>唯一的用途</h3>

<pre><code>- 當監控的Device Down, 就會發出告警信件通知
</code></pre>

<p><code>sh 安裝
$ npm install cacti-host-updown-monitor
</code></p>

<p>主程式沒有幾行扣, 呵呵...見笑了!</p>

<p><div><script src='https://gist.github.com/3170658.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/3170658&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
